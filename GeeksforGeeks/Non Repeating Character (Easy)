Question - Non Repeating Character

**************************************************

Description - 

Given a string S consisting of lowercase Latin Letters. Return the first non-repeating character in S. If there is no non-repeating character, return '$'.

Ex 1

Input:
S = hello
Output: h
Explanation: In the given string, the
first character which is non-repeating
is h, as it appears first and there is
no other 'h' in the string.

Ex 2

Input:
S = zxvczbtxyzvy
Output: c
Explanation: In the given string, 'c' is
the character which is non-repeating. 

********************************************************************************************************************************

Code -

*********************************************************************************************************************************

//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.lang.*;
import java.util.*;

class Driverclass
{
    public static void main(String args[])
    {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        
        while(t-- > 0)
        {
            String st = sc.next();
            
            char ans=new Solution().nonrepeatingCharacter(st);
            
            if(ans!='$')
            System.out.println(ans);
            else
            System.out.println(-1);
        }
    }
}

// } Driver Code Ends


//User function Template for Java

class Solution
{
    //Function to find the first non-repeating character in a string.
    static char nonrepeatingCharacter(String S)
    {
        //Your code here
        /* So idea is first we will store the characters from a String S with its count by traversing through the whole string */
        HashMap<Character, Integer> mymap = new HashMap<>();
        
        for(int i=0; i<S.length(); i++){
            if(mymap.containsKey(S.charAt(i))){
                mymap.put(S.charAt(i), mymap.get(S.charAt(i)) + 1);
            }
            else{
                mymap.put(S.charAt(i), 1);
            }
        }
        
        /* Now we have all characters with its count so now again we will traverse through the string S and now we will check for the first character whose count is exactly 1 i.e. non repeating character and as soon as we found that character then will return it */
        for(int i=0; i<S.length(); i++){ // Traverse through the String S and as soon as we found the Character whose count is 1 then will return that character.
            if(mymap.get(S.charAt(i)) == 1){
                return S.charAt(i);
            }
        }
        
        return '$'; // If there is no non-repeating character.
    }
}



