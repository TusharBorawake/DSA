Question - Run Length Encoding

******************************************************************************************************************

Description - 

Given a string, Your task is to  complete the function encode that returns the run length encoded string for the given string.
eg if the input string is “wwwwaaadexxxxxx”, then the function should return “w4a3d1e1x6″.
You are required to complete the function encode that takes only one argument the string which is to be encoded and returns the encoded string.

Example 1:

Input:
str = aaaabbbccc
Output: a4b3c3
Explanation: a repeated 4 times consecutively b 3 times, c also 3 times.

Example 2:

Input:
str = abbbcdddd
Output: a1b3c1d4

Example 3:

Input:
str = abbbcddddebbac
Output: a1b3c1d4e1b2a1c1

***********************************************************************************************************************************************

Code - 

***********************************************************************************************************************************************

class GfG
 {
	String encode(String str)
	{
          //Your code here
          
          StringBuilder sb = new StringBuilder();
          
          char currentCharacter;
          int currentCharacterCount = 1;
          
          for(int i=0; i<str.length() - 1; i++){
              currentCharacter = str.charAt(i);
              
              if((str.charAt(i)) == (str.charAt(i+1))){
                  currentCharacterCount++;
              }
              else{
                  String ch1 = Character.toString(currentCharacter);
                  String count = Integer.toString(currentCharacterCount);
                  sb.append(ch1 + count);
                  currentCharacterCount = 1;
              }
          }
          
          // Append the last character and its count
          String ch1 = Character.toString(str.charAt(str.length() - 1));
          String count = Integer.toString(currentCharacterCount);
          sb.append(ch1 + count);
          
          return sb.toString();
          
	}
 }



